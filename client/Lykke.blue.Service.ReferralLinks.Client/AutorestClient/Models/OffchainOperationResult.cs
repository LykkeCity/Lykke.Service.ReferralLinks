// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

// ReSharper disable MemberCanBePrivate.Global
// ReSharper disable MergeConditionalExpression
namespace Lykke.blue.Service.ReferralLinks.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OffchainOperationResult.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OffchainOperationResult
    {
        [EnumMember(Value = "Transfer")]
        Transfer,
        [EnumMember(Value = "CreateChannel")]
        CreateChannel,
        [EnumMember(Value = "ClientCommitment")]
        ClientCommitment
    }
    internal static class OffchainOperationResultEnumExtension
    {
        internal static string ToSerializedValue(this OffchainOperationResult? value)  =>
            value == null ? null : ((OffchainOperationResult)value).ToSerializedValue();

        internal static string ToSerializedValue(this OffchainOperationResult value)
        {
            switch( value )
            {
                case OffchainOperationResult.Transfer:
                    return "Transfer";
                case OffchainOperationResult.CreateChannel:
                    return "CreateChannel";
                case OffchainOperationResult.ClientCommitment:
                    return "ClientCommitment";
            }
            return null;
        }

        internal static OffchainOperationResult? ParseOffchainOperationResult(this string value)
        {
            switch( value )
            {
                case "Transfer":
                    return OffchainOperationResult.Transfer;
                case "CreateChannel":
                    return OffchainOperationResult.CreateChannel;
                case "ClientCommitment":
                    return OffchainOperationResult.ClientCommitment;
            }
            return null;
        }
    }
}
