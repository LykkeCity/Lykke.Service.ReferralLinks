// Code generated by Microsoft (R) AutoRest Code Generator 1.2.2.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.blue.Service.ReferralLinks.Client.AutorestClient.Models
{
    using Lykke.blue;
    using Lykke.blue.Service;
    using Lykke.blue.Service.ReferralLinks;
    using Lykke.blue.Service.ReferralLinks.Client;
    using Lykke.blue.Service.ReferralLinks.Client.AutorestClient;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ObjectResult
    {
        /// <summary>
        /// Initializes a new instance of the ObjectResult class.
        /// </summary>
        public ObjectResult()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ObjectResult class.
        /// </summary>
        public ObjectResult(object value = default(object), IList<object> formatters = default(IList<object>), IList<string> contentTypes = default(IList<string>), string declaredType = default(string), int? statusCode = default(int?))
        {
            Value = value;
            Formatters = formatters;
            ContentTypes = contentTypes;
            DeclaredType = declaredType;
            StatusCode = statusCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Value")]
        public object Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Formatters")]
        public IList<object> Formatters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ContentTypes")]
        public IList<string> ContentTypes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeclaredType")]
        public string DeclaredType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "StatusCode")]
        public int? StatusCode { get; set; }

    }
}
